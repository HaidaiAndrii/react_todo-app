{"version":3,"sources":["Components/TodoInput/TodoInput.jsx","Components/TodoItem/TodoItem.js","Components/ToDoList/ToDoList.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["TodoInput","addTodo","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","newTodo","title","id","Date","toLocaleTimeString","completed","isBeingEdited","console","log","type","value","onChange","target","className","placeholder","TodoItem","todo","classname","key","checked","ToDoList","todos","map","App","initialValue","JSON","parse","localStorage","getItem","setValue","useEffect","setItem","stringify","newValue","useLocalStorage","todosList","addToList","prev","htmlFor","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da35e39e.chunk.js","sourcesContent":["import React, { useState }  from 'react';\n\nexport const TodoInput = ({ addTodo }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const createTodo = (event) => {\n    event.preventDefault();\n\n    if(inputValue.trim()) {\n\n      const newTodo = {\n        title: inputValue,\n        id: new Date().toLocaleTimeString(),\n        completed: false,\n        isBeingEdited: false,\n      };\n\n      console.log('Adding todo...', newTodo)\n      addTodo(newTodo);\n    }\n\n    setInputValue('');\n  };\n\n  const inputChange = (event) => {\n    if(event.target.value.trim()) {\n      setInputValue(event.target.value);\n    }\n  };\n\n\n  return (\n\n    <form onSubmit={createTodo}>\n    <input\n      type=\"text\"\n      value={inputValue}\n      onChange={inputChange}\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n    />\n  </form>\n  )\n}","import React from 'react';\nimport classname from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({\n  todo: { id, title, completed, isBeingEdited },\n}) => (\n  <li\n    className={classname('Todo', {\n      completed,\n    })}\n    key={id}\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={completed}\n      />\n      <label>\n        {title}\n      </label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    isBeingEdited: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const ToDoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </ul>\n);\n\nToDoList.propTypes = {\n  todos: PropTypes.objectOf().isRequired,\n};\n","import React from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { TodoInput } from './Components/TodoInput';\nimport { ToDoList } from './Components/ToDoList/ToDoList';\n\nfunction App() {\n  const [todosList, addToList] = useLocalStorage('todos', []);\n\n  const addTodo = (todo) => {\n    addToList(prev => [todo, ...prev]);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <TodoInput addTodo={addTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        </ul>\n      </section>\n      <ToDoList todos={todosList} />\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          3 items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key)) || initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  const saveValue = (newValue) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, saveValue];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}